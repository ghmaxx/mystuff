local Players = game.Players
local RunService = game:GetService("RunService")
local VirtualInputManager = game:GetService("VirtualInputManager")
local TextChatService = game:GetService("TextChatService")

local player = Players.LocalPlayer
local MapFolder = workspace:WaitForChild("map")

-- Goal references
local GkBarrier = MapFolder:FindFirstChild("gkbarriar")
local AGoal = MapFolder:FindFirstChild("Agoal")
local BGoal = MapFolder:FindFirstChild("Bgoal")
local AGk = workspace:FindFirstChild("A")
local BGk = workspace:FindFirstChild("B")

local trapDelay = 0.08
local scriptActive = true
local aimbotDistance = 200
local aimbotShootTime = 0.265

print('ran script')

local function isInGame()
	if not scriptActive then return false end
	local LocalCharacter = player.Character
	if not LocalCharacter then return false end

	local StateFolder = LocalCharacter:FindFirstChild("state")
	if not StateFolder then return false end

	local InGameValue = StateFolder:FindFirstChild("ingame")
	if not InGameValue then return false end

	return InGameValue.Value
end

local function DisableCollisionBoxes()
	if not scriptActive then return end
	if GkBarrier then
		local ABarrier = GkBarrier:FindFirstChild("A")
		local BBarrier = GkBarrier:FindFirstChild("B")

		if ABarrier then ABarrier.CanCollide = false end
		if BBarrier then BBarrier.CanCollide = false end
	end

	if AGoal then AGoal.CanCollide = false end
	if BGoal then BGoal.CanCollide = false end
end

local function StealBall()
	if not scriptActive then return end
	local LocalCharacter = player.Character
	local LocalHumanoidRootPart = LocalCharacter and LocalCharacter:FindFirstChild("HumanoidRootPart")
	local Football = workspace.Terrain:FindFirstChild("Ball")

	if LocalHumanoidRootPart and Football then
		LocalHumanoidRootPart.CFrame = CFrame.new(Football.Position + Vector3.new(0, 2, 0))
		task.wait(0.1)
	end

	for _, OtherPlayer in pairs(Players:GetPlayers()) do
		if OtherPlayer ~= player then
			local OtherCharacter = OtherPlayer.Character
			local OtherFootball = OtherCharacter and OtherCharacter:FindFirstChild("Ball")
			local OtherRoot = OtherCharacter and OtherCharacter:FindFirstChild("HumanoidRootPart")

			if OtherFootball and OtherRoot and LocalHumanoidRootPart then
				LocalHumanoidRootPart.CFrame = OtherRoot.CFrame + Vector3.new(0, 2, 0)
				task.wait(0.1)
				VirtualInputManager:SendKeyEvent(true, Enum.KeyCode.Q, false, game)
				VirtualInputManager:SendKeyEvent(false, Enum.KeyCode.Q, false, game)
				break
			end
		end
	end
end

local function HasBall()
	if not scriptActive then return false end
	local LocalCharacter = player.Character
	if not LocalCharacter then return false end

	local BallInCharacter = LocalCharacter:FindFirstChild("Ball")
	if BallInCharacter then return true end

	local Football = workspace.Terrain:FindFirstChild("Ball")
	if Football and Football:FindFirstChild("owner") then
		return Football.owner.Value == player
	end

	return false
end

local function DoGoal()
	if not scriptActive then return end
	if not isInGame() then return end

	DisableCollisionBoxes()

	if not HasBall() then
		StealBall()
	end

	local startTime = tick()
	while not HasBall() and tick() - startTime < 2 do
		StealBall()
		task.wait(0.05)
	end

	if HasBall() then
		local LocalCharacter = player.Character
		local LocalRootPart = LocalCharacter and LocalCharacter:FindFirstChild("HumanoidRootPart")
		local Goal = player.Team and player.Team.Name == "A" and BGoal or AGoal

		if not LocalRootPart or not Goal then return end

		LocalRootPart.CFrame = Goal.CFrame
		task.wait(0.1)
		VirtualInputManager:SendMouseButtonEvent(0, 0, 0, true, game, 1)
		VirtualInputManager:SendMouseButtonEvent(0, 0, 0, false, game, 1)
	end
end

local function DoStealLoop()
	if not scriptActive then return end
	local active = true

	local conn
	conn = RunService.RenderStepped:Connect(function()
		if not active or not scriptActive then
			conn:Disconnect()
			return
		end

		local LocalCharacter = player.Character
		local LocalHumanoidRootPart = LocalCharacter and LocalCharacter:FindFirstChild("HumanoidRootPart")

		for _, OtherPlayer in pairs(Players:GetPlayers()) do
			if OtherPlayer ~= player then
				local OtherCharacter = OtherPlayer.Character
				local OtherFootball = OtherCharacter and OtherCharacter:FindFirstChild("Ball")
				local OtherRoot = OtherCharacter and OtherCharacter:FindFirstChild("HumanoidRootPart")

				if OtherFootball and OtherRoot and LocalHumanoidRootPart then
					LocalHumanoidRootPart.CFrame = OtherRoot.CFrame + Vector3.new(0, 2, 0)
					break
				end
			end
		end
	end)

	task.delay(2, function()
		active = false
	end)
end

local function DoTrap()
	if not scriptActive then return end
	if not isInGame() then return end

	VirtualInputManager:SendKeyEvent(true, Enum.KeyCode.Two, false, game)
	VirtualInputManager:SendKeyEvent(false, Enum.KeyCode.Two, false, game)

	task.wait(trapDelay)

	local LocalCharacter = player.Character
	local LocalHumanoidRootPart = LocalCharacter and LocalCharacter:FindFirstChild("HumanoidRootPart")

	if not LocalHumanoidRootPart then return end

	local startTime = tick()
	local glideDuration = 1.5

	local conn
	conn = RunService.RenderStepped:Connect(function()
		local now = tick()
		if now - startTime > glideDuration then
			conn:Disconnect()
			return
		end

		local Football = workspace.Terrain:FindFirstChild("Ball")
		if not Football then return end

		local velocity = Football.AssemblyLinearVelocity
		local speed = velocity.Magnitude

		local followOffset
		if speed > 1 then
			local direction = velocity.Unit
			followOffset = direction * 2 + Vector3.new(0, 0.5, 0)
		else
			followOffset = Vector3.new(0, 1.5, 0)
		end

		local targetPos = Football.Position + followOffset
		local currentPos = LocalHumanoidRootPart.Position
		local lerpedPos = currentPos:Lerp(targetPos, 0.2)
		LocalHumanoidRootPart.CFrame = CFrame.new(lerpedPos)
	end)
end

local function Shoot()
	if not scriptActive then return end
	if not isInGame() then return end

	print('req shoot')

	local LocalCharacter = player.Character
	local LocalHumanoidRootPart = LocalCharacter and LocalCharacter:FindFirstChild("HumanoidRootPart")
	local Humanoid = LocalCharacter and LocalCharacter:FindFirstChildOfClass("Humanoid")

	if not LocalHumanoidRootPart then return end

	local targetGoal = nil
	local distanceToAGoal = (LocalHumanoidRootPart.Position - AGoal.Position).Magnitude
	local distanceToBGoal = (LocalHumanoidRootPart.Position - BGoal.Position).Magnitude

	if distanceToAGoal <= aimbotDistance then
		targetGoal = AGoal
	elseif distanceToBGoal <= aimbotDistance then
		targetGoal = BGoal
	end

	if not targetGoal then return end

	if Humanoid then
		Humanoid.AutoRotate = false
	end

	local shootTarget
	local gk = player.Team and player.Team.Name == "A" and BGk or AGk
	if gk and gk:FindFirstChild("HumanoidRootPart") then
		local gkPos = gk.HumanoidRootPart.Position
		local goalSize = targetGoal.Size.X
		local leftSide = targetGoal.Position - targetGoal.CFrame.RightVector * (goalSize / 2)
		local rightSide = targetGoal.Position + targetGoal.CFrame.RightVector * (goalSize / 2)

		if (gkPos - leftSide).Magnitude < (gkPos - rightSide).Magnitude then
			shootTarget = rightSide
		else
			shootTarget = leftSide
		end
	else
		shootTarget = targetGoal.Position
	end

	local rotating = true
	local conn
	conn = RunService.RenderStepped:Connect(function()
		if not rotating or not LocalHumanoidRootPart then
			conn:Disconnect()
			return
		end
		LocalHumanoidRootPart.CFrame = CFrame.new(LocalHumanoidRootPart.Position, shootTarget)
	end)

	VirtualInputManager:SendMouseButtonEvent(0, 0, 0, true, game, 1)
	task.wait(aimbotShootTime)
	VirtualInputManager:SendMouseButtonEvent(0, 0, 0, false, game, 1)

	rotating = false
	if Humanoid then
		Humanoid.AutoRotate = true
	end
end

local UserInputService = game:GetService("UserInputService")

UserInputService.InputBegan:Connect(function(input, gameProcessed)
	if gameProcessed or not scriptActive then return end

	if input.KeyCode == Enum.KeyCode.T then
		DoTrap()
	elseif input.KeyCode == Enum.KeyCode.Y then
		if isInGame() then
			DisableCollisionBoxes()
			StealBall()
			DoStealLoop()
		end
	elseif input.KeyCode == Enum.KeyCode.K then
		DoGoal()
	elseif input.KeyCode == Enum.KeyCode.V then
		Shoot()
	end
end)


-- ðŸ†• TextChat Command Handling with /tp, /tpball, /tpp support
TextChatService.OnIncomingMessage = function(message)
	if message.TextSource and message.TextSource.UserId == player.UserId then
		local msg = message.Text:lower()
		local args = string.split(msg, " ")

		if msg == "/deactivate" then
			print("Deactivation requested")
			scriptActive = false
			print("Script deactivated.")
			return
		end

		if not scriptActive then return end

		if msg == "/goal" then
			DoGoal()
		elseif msg == "/steal" then
			if isInGame() then
				DisableCollisionBoxes()
				StealBall()
				DoStealLoop()
			end
		elseif msg == "/trap" then
			DoTrap()
		elseif msg == "/shoot" then
			Shoot()
		elseif msg == "/tpball" then
			local root = player.Character and player.Character:FindFirstChild("HumanoidRootPart")
			local ball = workspace.Terrain:FindFirstChild("Ball")
			if root and ball then
				root.CFrame = ball.CFrame + Vector3.new(0, 0, 0)
			end

		elseif args[1] == "/tp" and args[2] then
			local targetName = args[2]
			for _, plr in pairs(Players:GetPlayers()) do
				if plr.Name:lower():sub(1, #targetName) == targetName then
					local targetChar = plr.Character
					local targetRoot = targetChar and targetChar:FindFirstChild("HumanoidRootPart")
					local myRoot = player.Character and player.Character:FindFirstChild("HumanoidRootPart")
					if myRoot and targetRoot then
						myRoot.CFrame = targetRoot.CFrame + Vector3.new(0, 3, 0)
					end
					break
				end
			end
		end
	end
end
